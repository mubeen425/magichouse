[{"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\index.js":"1","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\App.js":"2","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\image withtextbox\\imagewithTextbbox.js":"3","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\Navbar\\navar.js":"4","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\endlogo\\endimage.jsx":"5","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\homeSection\\home.jsx":"6","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\footer\\footer.jsx":"7","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\loginform\\login.jsx":"8","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\redesignhouse\\redesignhouse.jsx":"9","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\pricing\\pricing.jsx":"10","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\redesignhouse\\RedesignHouseai.jsx":"11","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\image withtextbox\\imgControl.js":"12","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\api\\apiClient.js":"13","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\pricing\\paymentapi.jsx":"14","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\LoadingOverlay.jsx":"15","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\hooks\\useApi.js":"16","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\protectedRoutes\\userVerification.js":"17","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\protectedRoutes\\userValidation.js":"18"},{"size":690,"mtime":1695724059332,"results":"19","hashOfConfig":"20"},{"size":2633,"mtime":1695721697165,"results":"21","hashOfConfig":"20"},{"size":1622,"mtime":1695517298000,"results":"22","hashOfConfig":"20"},{"size":6476,"mtime":1695723947380,"results":"23","hashOfConfig":"20"},{"size":702,"mtime":1695517196000,"results":"24","hashOfConfig":"20"},{"size":1227,"mtime":1695484220000,"results":"25","hashOfConfig":"20"},{"size":865,"mtime":1695647852000,"results":"26","hashOfConfig":"20"},{"size":2905,"mtime":1695647278000,"results":"27","hashOfConfig":"20"},{"size":1759,"mtime":1695484220000,"results":"28","hashOfConfig":"20"},{"size":16433,"mtime":1695484220000,"results":"29","hashOfConfig":"20"},{"size":16923,"mtime":1695638786000,"results":"30","hashOfConfig":"20"},{"size":2881,"mtime":1695646312000,"results":"31","hashOfConfig":"20"},{"size":497,"mtime":1695723704197,"results":"32","hashOfConfig":"20"},{"size":486,"mtime":1695640154000,"results":"33","hashOfConfig":"20"},{"size":768,"mtime":1695484220000,"results":"34","hashOfConfig":"20"},{"size":520,"mtime":1695484220000,"results":"35","hashOfConfig":"20"},{"size":256,"mtime":1695721558651,"results":"36","hashOfConfig":"20"},{"size":268,"mtime":1695721678413,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cld63r",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\index.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\App.js",[],[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\image withtextbox\\imagewithTextbbox.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\Navbar\\navar.js",["97"],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\endlogo\\endimage.jsx",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\homeSection\\home.jsx",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\footer\\footer.jsx",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\loginform\\login.jsx",["98","99"],[],"import React, { useState, useEffect } from \"react\";\nimport { GoogleLogin } from \"@react-oauth/google\";\nimport apiClient from \"../../api/apiClient\";\nimport jwt_decode from \"jwt-decode\";\nimport { json, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"./loginform.css\";\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const [userImage, setUserImage] = useState(null);\n\n  const responseMessage = async (response) => {\n    console.log(response);\n    const accessToken = response.credential;\n    const user = jwt_decode(accessToken);\n\n    const result = await apiClient.post(\"/auth/google\", {\n      googlePayload: user,\n    });\n\n    if (!result.ok) {\n      toast.error(result.data.message || \"Google Login Failed\");\n      return;\n    }\n\n    // Retrieve the user's image URL from the result\n    // const userImageURL = result.data.data.userImageURL;\n\n    localStorage.setItem(\"googleUser\", JSON.stringify(result.data.data));\n    localStorage.setItem(\"token\", JSON.stringify(result.data.token));\n\n    // Store the user's image URL in local storage\n    // localStorage.setItem(\"userImage\", JSON.stringify(userImageURL));\n\n    navigate(\"/desiging\");\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    const fetchUserImage = async () => {\n      try {\n        const userImageResponse = await apiClient.get(\"/user/image\");\n        const userImageData = userImageResponse.data;\n        localStorage.setItem(\n          \"userImage\",\n          JSON.stringify(userImageData.imageUrl)\n        );\n        setUserImage(userImageData.imageUrl);\n      } catch (error) {\n        console.error(\"Error fetching user image:\", error);\n      }\n    };\n\n    fetchUserImage();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"col-xl-7 m-auto col-lg-8  col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"background-gradient mt-5\">\n            <p className=\"main-text\">\n              <span className=\"main-text1\">0ver</span> 1 Million User Have used\n              MagicMyHouse So far\n            </p>\n          </div>\n          <h2 className=\"sub-heading1\" style={{ textAlign: \"center\" }}>\n            Redesign your House in seconds\n          </h2>\n          <p className=\"sub-text\">\n            Sign in below with Google to create a free account and redesign your\n            room today. You will get 3 generations for free.\n          </p>\n        </div>\n        <div className=\"col-md-9 \">\n          <div className=\"card-body\">\n            <div className=\"mt-4\">\n              <div className=\"row\">\n                <div className=\"col-lg-12 col-md-12 col-sm-12 nbv\">\n                  <GoogleLogin onSuccess={responseMessage} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\redesignhouse\\redesignhouse.jsx",["100","101"],[],"import React from \"react\";\nimport \"./RedesignHouse.css\";\nimport RedesignComponent from \"./RedesignHouseai.jsx\";\nimport EndImage from \"../endlogo/endimage\";\nimport Footer from \"../footer/footer\";\n\nconst RedesignHouse = () => {\n  return (\n    <div>\n      <div className=\"container mt-5\">\n        <div className=\"redesign-house\">\n          <div className=\"row\">\n            <div className=\"col-xl-5 col-lg-5 m-auto  col-md-12 col-sm-12 col-xs-12\">\n              <h2 className=\"redesign-house-heading\">\n                Transform your house in seconds\n              </h2>\n              <p className=\"redesign-house-description\">\n                Begin by uploading a photo, choosing the room type, selecting\n                themes, and clicking Render designs.\n              </p>\n            </div>\n            <div className=\"col-xl-5 col-lg-5 m-auto  col-md-12 col-sm-12 col-xs-12\">\n              <div className=\"redesign-house-images\">\n                <div className=\"image-container1\">\n                  <img\n                    className=\"img123\"\n                    src={process.env.PUBLIC_URL + \"/Mediamodifier.png\"}\n                    alt=\"Image 1\"\n                  />\n                  <img\n                    className=\"overlay-image\"\n                    width=\"60px\"\n                    height=\"60px\"\n                    src={process.env.PUBLIC_URL + \"/crop.png\"}\n                    alt=\"Image 2\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"circle1 right-top1\"></div>\n          <div className=\"circle112 right-top1\"></div>\n        </div>\n        <RedesignComponent />\n      </div>\n      <EndImage />\n      <Footer />\n    </div>\n  );\n};\n\nexport default RedesignHouse;\n","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\pricing\\pricing.jsx",["102","103","104"],[],"import \"./Pricing.css\";\nimport EndImage from \"../endlogo/endimage\";\nimport Footer from \"../footer/footer\";\nimport React, { useEffect, useState } from \"react\";\nimport { makePayment } from \"./paymentapi\";\nimport { useNavigate } from \"react-router-dom\";\nfunction Pricing() {\n  const [paymentData, setPaymentData] = useState(null);\n  const [newStringState, setNewStringState] = useState(\"\");\n  const [isSubscribed9, setIsSubscribed9] = useState(\n    localStorage.getItem(\"isSubscribed9\") === \"true\"\n  );\n  const [isSubscribed24, setIsSubscribed24] = useState(\n    localStorage.getItem(\"isSubscribed24\") === \"true\"\n  );\n  const [notificationMessage, setNotificationMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    localStorage.setItem(\"isSubscribed9\", isSubscribed9);\n    localStorage.setItem(\"isSubscribed24\", isSubscribed24);\n  }, [isSubscribed9, isSubscribed24]);\n\n  async function dataPayment(amount) {\n    try {\n      const response = await makePayment({ amount });\n      console.log(\"Payment Response:\", response);\n\n      setPaymentData(response?.data?.amount?.value);\n      const amountValue = response?.data?.amount?.value;\n      setNewStringState(amountValue ? String(amountValue) : \"\");\n\n      const popupContent = `\n        <html>\n          <head>\n            <title>Payment Form</title>\n            <!-- Include Bootstrap CSS -->\n            <link\n              rel=\"stylesheet\"\n              href=\"https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css\"\n            />\n            <!-- Custom CSS for the \"Pay\" button -->\n            <style>\n              .dark-pink-gradient-button {\n                background: linear-gradient(to bottom, #ff1493, #c71585);\n                color: #fff;\n              }\n              .dark-pink-gradient-button:hover {\n                background: linear-gradient(to bottom, #c71585, #ff1493);\n                color: #fff;\n              }\n            </style>\n          </head>\n          <body>\n            <!-- Create a Bootstrap modal -->\n            <div class=\"modal fade\" id=\"paymentModal\" tabindex=\"-1\" aria-labelledby=\"paymentModalLabel\" aria-hidden=\"true\">\n              <div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                  <div class=\"modal-header\">\n                    <h5 class=\"modal-title\" id=\"paymentModalLabel\">Payment Form</h5>\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                  </div>\n                  <div class=\"modal-body\">\n                    <!-- Payment form goes here -->\n                    <div class=\"form-group\">\n                      <label for=\"amount\">Amount</label>\n                      <input type=\"text\" class=\"form-control\" id=\"amount\" value=\"${amount}\" readonly>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"description\">Description</label>\n                      <input type=\"text\" class=\"form-control\" id=\"description\" value=\"${response.description}\" placeholder=\"Description\">\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"cardNumber\">Card Number</label>\n                      <input type=\"text\" class=\"form-control\" id=\"cardNumber\" placeholder=\"Card Number\" required  >\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"expiryDate\">Expiry Date</label>\n                      <input type=\"date\" class=\"form-control\" id=\"expiryDate\" placeholder=\"MM/YY\" required>\n                    </div>\n                    <div class=\"form-group\">\n                      <label for=\"cvv\">CVV</label>\n                      <input type=\"text\" class=\"form-control\" id=\"cvv\" placeholder=\"CVV\" required>\n                    </div>\n                  </div>\n                  <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                    <button type=\"button\" class=\"btn dark-pink-gradient-button\" onclick=\"processPayment()\">Pay</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n  \n            <!-- Include Bootstrap JavaScript -->\n            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.min.js\"></script>\n            <script>\n            function processPayment() {\n              const cardNumber = document.getElementById(\"cardNumber\").value;\n              const expiryDate = document.getElementById(\"expiryDate\").value;\n              const cvv = document.getElementById(\"cvv\").value;\n          \n              // Basic validation\n              if (!cardNumber || !expiryDate || !cvv) {\n                alert(\"Please fill out all required fields.\");\n                return;\n              }\n          \n              // Additional validation logic can be added here, such as checking the card number format, expiry date, etc.\n          \n              // If validation passes, you can send the payment data to your server for processing\n              // Replace this with your actual payment processing logic\n          \n              // For simplicity, I'm just closing the modal here\n              var myModal = new bootstrap.Modal(document.getElementById(\"paymentModal\"));\n              myModal.hide();\n          \n              // Simulate a successful payment (replace this with your actual payment processing logic)\n              // After the payment is successful, send a message to the parent window.\n              window.opener.postMessage('payment_successful', '*');\n            }\n          \n            // Show the Bootstrap modal when the page loads\n            document.addEventListener(\"DOMContentLoaded\", function() {\n              var myModal = new bootstrap.Modal(document.getElementById(\"paymentModal\"), {\n                backdrop: \"static\",\n                keyboard: false\n              });\n              myModal.show();\n            })\n            </script>\n          </body>\n        </html>\n      `;\n\n      const blob = new Blob([popupContent], { type: \"text/html\" });\n      const popupURL = URL.createObjectURL(blob);\n      const popupWindow = window.open(\n        popupURL,\n        \"_blank\",\n        `width=500,height=500,left=${(window.screen.width - 500) / 2},top=${\n          (window.screen.height - 500) / 2\n        }`\n      );\n\n      if (popupWindow) {\n        popupWindow.focus();\n\n        window.addEventListener(\"message\", async (event) => {\n          if (event.data === \"payment_successful\") {\n            if (amount === 9) {\n              setIsSubscribed9(true);\n            } else if (amount === 24) {\n              setIsSubscribed24(true);\n            }\n\n            popupWindow.close();\n\n            navigate(\"/\");\n\n            showNotification(\"Payment Successful\");\n            await new Promise((resolve) => setTimeout(resolve, 2000));\n          }\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  function showNotification(message) {\n    setNotificationMessage(message);\n    alert(message);\n  }\n\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-xl-1  col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n          <div className=\"col-xl-10 m-auto col-lg-8  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"background-gradient1\">\n              <p className=\"main-text main-text133\">\n                <span className=\"main-text1\">PRI</span>CING PLAN\n              </p>\n            </div>\n            <h2 className=\"sub-heading1\">Buy MagicMyHouse Credits</h2>\n            <p className=\"sub-text1\">\n              You have 10 credits. Join thousands of happy customers. Explore\n              more options below.\n            </p>\n          </div>\n          <div className=\"col-xl-1  col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-xl-1 col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n          <div className=\"col-xl-5 mt-4 col-lg-5  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"\">\n              <div className=\"box1\">\n                <div className=\"pac\">1 Month Package</div>\n                <div className=\"price-heading\">$9.99</div>\n                <div className=\"price-description\">\n                  Unlimted credit credits for <br />\n                  <span className=\"colorrr\"> For a duration of 1 month</span>\n                </div>\n                {isSubscribed9 ? (\n                  <button\n                    className=\"pay-button\"\n                    style={{\n                      width: \"18rem\",\n                      textAlign: \"center\",\n                      paddingRight: \"9rem\",\n                      paddingLeft: \"6rem\",\n                    }}\n                    disabled\n                  >\n                    Subscribed\n                  </button>\n                ) : (\n                  <button\n                    className=\"pay-button\"\n                    onClick={() => {\n                      dataPayment(9);\n                    }}\n                  >\n                    Pay\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-5  mt-4 col-lg-5  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"\">\n              <div className=\"box2\">\n                <div className=\"pac\">6 Month Package</div>\n                <div className=\"price-heading\">$24.99</div>\n                <div className=\"price-description\">\n                  Unlimted credit credits for <br />\n                  <span className=\"colorrr\"> For a duration of 6 month</span>\n                </div>\n                {isSubscribed24 ? (\n                  <button\n                    className=\"pay-button\"\n                    style={{\n                      width: \"18rem\",\n                      textAlign: \"center\",\n                      paddingRight: \"9rem\",\n                      paddingLeft: \"6rem\",\n                    }}\n                    disabled\n                  >\n                    Subscribed\n                  </button>\n                ) : (\n                  <button\n                    className=\"pay-button\"\n                    onClick={() => {\n                      dataPayment(24);\n                    }}\n                  >\n                    Pay\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-xl-1 col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-xl-1 col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n          <div className=\"col-xl-5 col-lg-5  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"x12\">\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Onetime payments\n              </p>\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Premium support by email\n              </p>\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Commercial usage of photos\n              </p>\n            </div>\n          </div>\n          <div className=\"col-xl-5 col-lg-5  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"x12\">\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Onetime payments\n              </p>\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Premium support by email\n              </p>\n              <p>\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  style={{\n                    justifyContent: \"space-between\",\n                    marginRight: \"10px\",\n                  }}\n                  fill=\"#009EE2\"\n                  class=\"bi bi-check2-circle\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  <path d=\"M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z\" />\n                  <path d=\"M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z\" />\n                </svg>\n                Commercial usage of photos\n              </p>\n            </div>\n          </div>\n\n          <div className=\"col-xl-1 col-lg-1  col-md-12 col-sm-12 col-xs-12\"></div>\n        </div>\n        <div className=\"row mt-5\">\n          <div className=\"col-xl-8 m-auto col-lg-10  col-md-12 col-sm-12 col-xs-12\">\n            <div className=\"ok123\">\n              <p className=\"main-text\" style={{ marginBottom: \"0\" }}>\n                Interested in team or bulk pricing? Email :\n                info@magicmyhouse.com or KVK : 08214009\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"circle left-top\"></div>\n        <div className=\"circle right-top\"></div>\n      </div>\n\n      <EndImage />\n      <Footer />\n    </div>\n  );\n}\nexport default Pricing;\n","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\redesignhouse\\RedesignHouseai.jsx",["105","106","107","108","109","110"],[],"import React, { useState, useCallback } from \"react\";\nimport \"./YourComponent.css\";\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\nimport apiClient from \"../../api/apiClient\";\nimport useApi from \"../../hooks/useApi\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport LoadingOverlay from \"../LoadingOverlay\";\nimport { useDropzone } from \"react-dropzone\";\nconst RedesignComponent = () => {\n  const [selectedImage, setSelectedImage] = useState();\n  const [resultData, setResultData] = useState();\n  const [uploadedImage, setuploadedImage] = useState(null);\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [selectedImagesPreview, setSelectedImagesPreview] = useState([]);\n  const [selectedRoomType, setSelectedRoomType] = useState(\"\");\n  const [apiResponseImages, setApiResponseImages] = useState([]);\n\n  const [imageGridData, setImageGridData] = useState([\n    {\n      id: \"Image 1\",\n      src: process.env.PUBLIC_URL + \"/image5.png\",\n      name: \"Modern\",\n    },\n    {\n      id: \"Image 2\",\n      src: process.env.PUBLIC_URL + \"/image6.png\",\n      name: \"Minimalist\",\n    },\n    {\n      id: \"Image 3\",\n      src: process.env.PUBLIC_URL + \"/image7.png\",\n      name: \"Professional\",\n    },\n    {\n      id: \"Image 4\",\n      src: process.env.PUBLIC_URL + \"/image 8.png\",\n      name: \"Tropical\",\n    },\n    {\n      id: \"Image 5\",\n      src: process.env.PUBLIC_URL + \"/image 9.png\",\n      name: \"Coastal\",\n    },\n    {\n      id: \"Image 6\",\n      src: process.env.PUBLIC_URL + \"/image10.png\",\n      name: \"Vintage\",\n    },\n    {\n      id: \"Image 7\",\n      src: process.env.PUBLIC_URL + \"/image11.png\",\n      name: \"Industrial\",\n    },\n    {\n      id: \"Image 8\",\n      src: process.env.PUBLIC_URL + \"/image12.png\",\n      name: \"Neoclassic\",\n    },\n    {\n      id: \"Image 9\",\n      src: process.env.PUBLIC_URL + \"/image7.png\",\n      name: \"Tribal\",\n    },\n  ]);\n  const rows = [];\n  for (let i = 0; i < imageGridData.length; i += 3) {\n    const row = imageGridData.slice(i, i + 3);\n    rows.push(row);\n  }\n\n  const [draggedImage, setDraggedImage] = useState(null);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: (acceptedFiles, e) => {\n      const file = acceptedFiles[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          if (file.type.startsWith(\"image/\")) {\n            setDraggedImage(e.target.result);\n            setSelectedImage(e.target.result);\n            // Store the uploaded image file in the uploadedImage state variable\n            setuploadedImage(file);\n            console.log(\"Dragged Image:\", e.target.result);\n          } else {\n            toast.error(\"Invalid file type. Please upload an image.\");\n          }\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    accept: \"image/*\",\n  });\n\n  ////////////////////////////////////////////////////////////////////////////\n  const toggleImageSelection = (imageId) => {\n    const updatedSelectedImages = [...selectedImages];\n    const updatedSelectedImagesPreview = [...selectedImagesPreview];\n    console.log(imageGridData.getSelected, updatedSelectedImagesPreview);\n    const imageIndex = updatedSelectedImages.indexOf(imageId);\n    const imageGridItem = imageGridData.find((data) => data.name === imageId);\n\n    if (imageIndex !== -1) {\n      updatedSelectedImages.splice(imageIndex, 1);\n      updatedSelectedImagesPreview.splice(imageIndex, 1);\n    } else {\n      if (updatedSelectedImages.length < 2) {\n        updatedSelectedImages.push(imageId);\n        updatedSelectedImagesPreview.push(imageGridItem);\n      }\n    }\n    console.log(updatedSelectedImages, \"sel\");\n    setSelectedImages(updatedSelectedImages);\n    setSelectedImagesPreview(updatedSelectedImagesPreview);\n    setResultData(null);\n  };\n  function handleDownloadAllImages() {\n    // Create a temporary container element\n    const container = document.createElement(\"div\");\n    container.style.display = \"none\";\n\n    // Iterate through the API response images\n    apiResponseImages.forEach((imageUrl, index) => {\n      if (imageUrl) {\n        // If the image URL is defined, create an anchor element for download\n        const anchor = document.createElement(\"a\");\n        anchor.href = imageUrl;\n        anchor.download = `image_${index + 1}.png`;\n        anchor.style.display = \"none\";\n        container.appendChild(anchor);\n        anchor.click();\n      } else {\n        // If the image URL is undefined, show an alert\n        handleAlert(\n          `Image ${index + 1} is undefined and cannot be downloaded.`\n        );\n      }\n    });\n\n    // Clean up the temporary container element\n    document.body.appendChild(container);\n    container.remove();\n  }\n\n  const { request, loading } = useApi((data) =>\n    apiClient.post(\"/interior\", data)\n  );\n  const handleAlert = (message) => {\n    toast.error(message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n  };\n  async function handleSubmit() {\n    if (selectedImages.length === 0) {\n      handleAlert(\"Please select at least one photo before rendering designs.\");\n      return;\n    }\n    if (!uploadedImage) {\n      handleAlert(\"Please upload an image before submitting the form.\");\n      return;\n    }\n\n    const formdata = new FormData();\n    console.log(uploadedImage);\n    console.log(selectedImages);\n    console.log(selectedRoomType);\n    formdata.append(\"image\", uploadedImage); // Include the uploaded image in the form data\n    formdata.append(\"themes\", JSON.stringify(selectedImages)); // Include the selected themes in the form data\n    formdata.append(\"room\", selectedRoomType);\n\n    try {\n      const result = await request(formdata);\n\n      // Store the API response images in the state\n      setApiResponseImages(result.data.result.filteredResponses);\n      console.log(\"API Response Images:\", result.data.result);\n      setResultData(result.data.result.filteredResponses);\n      localStorage.setItem(\n        \"googleUser\",\n        JSON.stringify(result.data.result.updatedUser)\n      );\n    } catch (error) {\n      console.error(\"API request error:\", error);\n    }\n  }\n  const containerStyle = {\n    alignItems: \"center\",\n    border: \"1px solid black\",\n    borderRadius: \"10px\",\n    borderStyle: \"dashed\",\n  };\n\n  const responsiveContainerStyle = {\n    ...containerStyle,\n    width: \"100%\",\n    marginRight: \"5.4rem\",\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"row\" style={{ marginTop: \"5rem\" }}>\n        <LoadingOverlay open={loading} />\n\n        <div className=\"col-xl-4   col-lg-4  col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"left-box \">\n            <p>\n              You have no credits left. Buy more here to generate your house.\n            </p>\n            <div\n              style={\n                window.innerWidth <= 768\n                  ? responsiveContainerStyle\n                  : containerStyle\n              }\n            >\n              <div\n                style={\n                  window.innerWidth <= 768\n                    ? responsiveContainerStyle\n                    : containerStyle\n                }\n              >\n                <div>\n                  {selectedImage ? (\n                    <div className=\"uploaded-image  rounded\">\n                      <img\n                        src={selectedImage}\n                        alt=\"Uploaded\"\n                        style={{\n                          width: \"100%\",\n                          padding: \"32px 10px 10px 10px\",\n                        }}\n                        className=\"rounded\"\n                      />\n                      {selectedImage && (\n                        <>\n                          <button\n                            className=\"delete-image-button\"\n                            style={{\n                              position: \"absolute\",\n                              right: \"25px\",\n                              top: \"61px\",\n                              background: \"none\",\n                              border: \"none\",\n                              color: \"red\",\n                            }}\n                            onClick={() => {\n                              setSelectedImage(null);\n                              setuploadedImage(null);\n                            }}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"16\"\n                              height=\"16\"\n                              fill=\"currentColor\"\n                              class=\"bi bi-trash-fill\"\n                              viewBox=\"0 0 16 16\"\n                            >\n                              <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\n                            </svg>\n                          </button>\n                          <p\n                            style={{\n                              position: \"absolute\",\n                              left: \"34px\",\n                              top: \"61px\",\n                            }}\n                          >\n                            Original Room\n                          </p>\n                        </>\n                      )}\n                    </div>\n                  ) : (\n                    <div {...getRootProps()} className=\"mb-5\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"30\"\n                        height=\"30\"\n                        style={{ marginTop: \"1rem\" }}\n                        fill=\"#009FE3\"\n                        class=\"bi bi-cloud-upload\"\n                        viewBox=\"0 0 16 16\"\n                      >\n                        <path\n                          fill-rule=\"evenodd\"\n                          d=\"M4.406 1.342A5.53 5.53 0 0 1 8 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 0 1 0-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 0 0-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 0 1 0 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\n                        />\n                        <path\n                          fill-rule=\"evenodd\"\n                          d=\"M7.646 4.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1-.708.708L8.5 5.707V14.5a.5.5 0 0 1-1 0V5.707L5.354 7.854a.5.5 0 1 1-.708-.708l3-3z\"\n                        />\n                      </svg>{\" \"}\n                      <br />\n                      Drag and drop Your Image\n                      <br />\n                      or <br />\n                      <button\n                        className=\"upload-button\"\n                        onClick={() =>\n                          document.querySelector('input[type=\"file\"]')\n                        }\n                      >\n                        Upload Photo\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n            <p className=\"mt-3\">\n              {\" \"}\n              <span> Select Room type</span>\n            </p>\n\n            <div className=\"dropdown-container\">\n              <select\n                className=\"dropdown\"\n                onChange={(e) => setSelectedRoomType(e.target.value)}\n              >\n                <option value=\"Living Room\">Living Room</option>\n                <option value=\"Dining Room\">Dining Room</option>\n                <option value=\"BedRoom\">BedRoom</option>\n                <option value=\"Bath Room\">Bath Room</option>\n                <option value=\"Office\">Office</option>\n                <option value=\"Kitchen\">Kitchen</option>\n                <option value=\"Basement\">Basement</option>\n                <option value=\"Arabian Majilis\">Arabian Majilis</option>\n                <option value=\"Outdoor Patio\">Outdoor Patio</option>\n                <option value=\"Gaming Room\">Gaming Room </option>\n              </select>\n            </div>\n            <p className=\"mt-3\">\n              <span>Select Room Themes (up to 2) </span>\n            </p>\n            <ImageGrid\n              rows={rows}\n              selectedImages={selectedImages}\n              handleSubmit={handleSubmit}\n              toggleImageSelection={toggleImageSelection}\n            />\n          </div>\n        </div>\n        <div className=\"col-xl-8  col-lg-8  col-md-12 col-sm-12 col-xs-12\">\n          <div className=\"right-box\">\n            <div className=\"row\">\n              {selectedImagesPreview.map((imageData, index) => (\n                <Col key={imageData.id} sm={6}>\n                  <div className=\"selected-image\">\n                    {resultData?.length > 0 ? (\n                      <img\n                        src={resultData[index] || \"\"}\n                        alt={\"Image \" + (index + 1)}\n                        className=\"img-fluid\"\n                        style={{\n                          width: \"100%\",\n                          height: \"18rem\",\n                          marginTop: \"0.5rem\",\n                        }}\n                      />\n                    ) : (\n                      <div\n                        className=\"d-flex justify-content-center align-items-center bg-dark rounded\"\n                        style={{\n                          width: \"100%\",\n                          height: \"18rem\",\n                          marginTop: \"0.5rem\",\n                        }}\n                      >\n                        <img\n                          src={\n                            process.env.PUBLIC_URL + \"/MMH_logo-removebg.png\"\n                          }\n                          alt={imageData.name}\n                          className=\"img-fluid\"\n                          style={{\n                            width: \"12rem\",\n                          }}\n                        />\n                      </div>\n                    )}\n                    <div className=\"image-text\" style={{ marginTop: \"1.9rem\" }}>\n                      <span style={{ marginLeft: \"2px\" }}>\n                        {imageData.name + \" \"}\n                      </span>\n                      {selectedRoomType ? selectedRoomType : \"Living Room\"}\n                    </div>\n                  </div>\n                </Col>\n              ))}\n              {apiResponseImages.length > 0 && (\n                <button onClick={handleDownloadAllImages} className=\"bo\">\n                  Download All Images\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default RedesignComponent;\n\nconst ImageGrid = ({\n  rows,\n  selectedImages,\n  toggleImageSelection,\n  handleSubmit,\n}) => (\n  <div className=\"image-grid\">\n    {rows.map((row, rowIndex) => (\n      <Row key={rowIndex} className=\"image-row\">\n        {row.map((imageData) => (\n          <Col key={imageData.id} sm={4} className=\"image-container\">\n            <div className=\"image-wrapper\">\n              <img\n                src={imageData.src}\n                alt={imageData.name}\n                onClick={() => toggleImageSelection(imageData.name)}\n                className={`position-relative img-fluid ${\n                  selectedImages?.includes(imageData.name)\n                    ? \"selected-image\"\n                    : \"\"\n                }`}\n              />\n              {selectedImages?.includes(imageData.name) && (\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"white\"\n                  className=\"svg-icon\"\n                  style={{ backgroundColor: \"black\", color: \"white\" }}\n                >\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n                </svg>\n              )}\n              <div className=\"image-text\">{imageData.name}</div>\n            </div>\n          </Col>\n        ))}\n      </Row>\n    ))}\n\n    <Row className=\"render\">\n      <Col>\n        <Button onClick={handleSubmit} className=\"bo\">\n          RENDER DESIGNS\n        </Button>\n        <span className=\"credits\">Cost : {selectedImages.length}</span>\n      </Col>\n      <ToastContainer />\n    </Row>\n  </div>\n);\n","C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\image withtextbox\\imgControl.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\api\\apiClient.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\pricing\\paymentapi.jsx",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\Components\\LoadingOverlay.jsx",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\hooks\\useApi.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\protectedRoutes\\userVerification.js",[],[],"C:\\Users\\Azaan\\Builtinsoft\\New folder\\Logics Yard\\latest\\frontend\\src\\protectedRoutes\\userValidation.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":14,"column":10,"nodeType":"113","messageId":"114","endLine":14,"endColumn":26},{"ruleId":"111","severity":1,"message":"115","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"116","line":11,"column":10,"nodeType":"113","messageId":"114","endLine":11,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":25,"column":19,"nodeType":"119","endLine":29,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":30,"column":19,"nodeType":"119","endLine":36,"endColumn":21},{"ruleId":"111","severity":1,"message":"120","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":21},{"ruleId":"111","severity":1,"message":"121","line":9,"column":10,"nodeType":"113","messageId":"114","endLine":9,"endColumn":24},{"ruleId":"111","severity":1,"message":"122","line":16,"column":10,"nodeType":"113","messageId":"114","endLine":16,"endColumn":29},{"ruleId":"111","severity":1,"message":"123","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":38},{"ruleId":"111","severity":1,"message":"124","line":3,"column":28,"nodeType":"113","messageId":"114","endLine":3,"endColumn":37},{"ruleId":"111","severity":1,"message":"125","line":19,"column":25,"nodeType":"113","messageId":"114","endLine":19,"endColumn":41},{"ruleId":"111","severity":1,"message":"126","line":72,"column":10,"nodeType":"113","messageId":"114","endLine":72,"endColumn":22},{"ruleId":"111","severity":1,"message":"127","line":74,"column":25,"nodeType":"113","messageId":"114","endLine":74,"endColumn":38},{"ruleId":"111","severity":1,"message":"128","line":74,"column":40,"nodeType":"113","messageId":"114","endLine":74,"endColumn":52},"no-unused-vars","'showLogoutButton' is assigned a value but never used.","Identifier","unusedVar","'json' is defined but never used.","'userImage' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'paymentData' is assigned a value but never used.","'newStringState' is assigned a value but never used.","'notificationMessage' is assigned a value but never used.","'useCallback' is defined but never used.","'Container' is defined but never used.","'setImageGridData' is assigned a value but never used.","'draggedImage' is assigned a value but never used.","'getInputProps' is assigned a value but never used.","'isDragActive' is assigned a value but never used."]